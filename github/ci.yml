name: CI Pipeline

on:
  push:
    branches:
      - testing

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install linting tools
        run: |
          pip install flake8 black

      - name: Lint backend code
        run: |
          flake8 backend/product_service/app backend/order_service/app backend/customer_service/app --max-line-length=120
          black --check backend/product_service/app backend/order_service/app backend/customer_service/app

  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

      rabbitmq:
        image: rabbitmq:3-management
        ports:
          - 5672:5672
          - 15672:15672
        env:
          RABBITMQ_DEFAULT_USER: guest
          RABBITMQ_DEFAULT_PASS: guest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies and run tests for product_service
        working-directory: backend/product_service
        run: |
          pip install -r requirements-dev.txt
          pytest tests/ -v

      - name: Install dependencies and run tests for order_service
        working-directory: backend/order_service
        run: |
          pip install -r requirements-dev.txt
          pytest tests/ -v

      - name: Install dependencies and run tests for customer_service
        working-directory: backend/customer_service
        run: |
          pip install -r requirements-dev.txt
          pytest tests/ -v

  build-and-push:
    runs-on: ubuntu-latest
    needs: [lint, test]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Azure Container Registry
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.ACR_LOGIN_SERVER }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Build and push product_service image
        working-directory: backend/product_service
        run: |
          docker build -t ${{ secrets.ACR_LOGIN_SERVER }}/product-service:${{ github.sha }} .
          docker push ${{ secrets.ACR_LOGIN_SERVER }}/product-service:${{ github.sha }}

      - name: Build and push order_service image
        working-directory: backend/order_service
        run: |
          docker build -t ${{ secrets.ACR_LOGIN_SERVER }}/order-service:${{ github.sha }} .
          docker push ${{ secrets.ACR_LOGIN_SERVER }}/order-service:${{ github.sha }}

      - name: Build and push customer_service image
        working-directory: backend/customer_service
        run: |
          docker build -t ${{ secrets.ACR_LOGIN_SERVER }}/customer-service:${{ github.sha }} .
          docker push ${{ secrets.ACR_LOGIN_SERVER }}/customer-service:${{ github.sha }}

      - name: Build and push frontend image
        working-directory: frontend
        run: |
          docker build -t ${{ secrets.ACR_LOGIN_SERVER }}/frontend:${{ github.sha }} .
          docker push ${{ secrets.ACR_LOGIN_SERVER }}/frontend:${{ github.sha }}