name: Multi-Stage Deployment

on:
  workflow_run:
    workflows:
      - CI Pipeline
    types:
      - completed

  workflow_dispatch:

jobs:
  azure_login:
    runs-on: ubuntu-latest
    steps:
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

  # Job 1: Deploy to Staging Environment (runs only if image build and push succeed)
  deploy_staging:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    needs: azure_login

    steps:
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          enable-AzPSSession: true

      - name: Update Azure CLI
        run: az upgrade --yes

      - name: Set Kubernetes Context for Staging
        run: |
          az aks get-credentials --resource-group ${{ secrets.STAGING_RESOURCE_GROUP }} --name ${{ secrets.STAGING_AKS_CLUSTER }} --overwrite-existing

      - name: Deploy to Staging
        run: |
          kubectl apply -f week05/k8s/order-service.yaml
          kubectl apply -f week05/k8s/product-service.yaml
          kubectl apply -f week05/k8s/customer-service.yaml

      - name: Wait for Manual Testing
        run: echo "Pausing for 5 minutes..."; sleep 300

      - name: Destroy Staging Environment
        run: |
          kubectl delete -f week05/k8s/order-service.yaml
          kubectl delete -f week05/k8s/product-service.yaml
          kubectl delete -f week05/k8s/customer-service.yaml

#   deploy_production:
#     name: Deploy to Production
#     runs-on: ubuntu-latest
#     needs: deploy_staging
#     if: github.ref == 'refs/heads/main'
#     steps:
#       - name: Checkout Code
#         uses: actions/checkout@v4

#       - name: Set Kubernetes Context for Production
#         run: |
#           az aks get-credentials --resource-group ${{ inputs.PRODUCTION_RESOURCE_GROUP }} --name ${{ inputs.PRODUCTION_AKS_CLUSTER }} --overwrite-existing

#       - name: Deploy to Production
#         run: |
#           kubectl apply -f week05/k8s/order-service.yaml
#           kubectl apply -f week05/k8s/product-service.yaml
#           kubectl apply -f week05/k8s/customer-service.yaml

#       - name: Monitor Deployment
#         run: |
#           kubectl get pods --namespace default
#           kubectl get services --namespace default
